{
    "name": "s3-sink-CONNECT_NAME",
    "config": {
        "basic.auth.credentials.source": "USER_INFO",
        "basic.auth.user.info": "SCHEMA_AUTH",
        "behavior.on.null.values": "ignore",
        "connector.class": "io.confluent.connect.s3.S3SinkConnector",
        "consumer.override.auto.offset.reset": "earliest",
        "errors.deadletterqueue.topic.name": "deadLetterQueueTopic",
        "errors.log.enable": "true",
        "errors.log.include.messages": "true",
        "errors.tolerance": "all",
        "flush.size": "100",
        "format.class": "io.confluent.connect.s3.format.json.JsonFormat",
        "key.converter": "org.apache.kafka.connect.storage.StringConverter",
        "key.converter.basic.auth.credentials.source": "USER_INFO",
        "key.converter.basic.auth.user.info": "SCHEMA_AUTH",
        "key.converter.schemas.enable": "false",
        "locale": "en-us",
        "name": "s3-sink-CONNECT_NAME",
        "partition.duration.ms": "300000",
        "partitioner.class": "io.confluent.connect.storage.partitioner.TimeBasedPartitioner",
        "path.format": "'year'=YYYY/'month'=MM/'day'=dd/'hour'=HH",
        "rotate.schedule.interval.ms": "300000",
        "s3.bucket.name": "AWS_KAFKA_BUCKET_NAME",
        "s3.part.size": "5242880",
        "s3.compression.type": "gzip",
        "s3.region": "us-east-1",
        "schema.compatibility": "NONE",
        "schema.registry.basic.auth.credentials.source": "USER_INFO",
        "schema.registry.basic.auth.user.info": "SCHEMA_AUTH",
        "schema.registry.url": "SCHEMA_REGISTRY",
        "storage.class": "io.confluent.connect.s3.storage.S3Storage",
        "tasks.max": "1",
        "timestamp.extractor": "Wallclock",
        "timezone": "UTC",
        "topics": "topicName",
        "topics.dir": "kafka-topics-5",
        "value.converter": "io.confluent.connect.protobuf.ProtobufConverter",
        "value.converter.basic.auth.credentials.source": "USER_INFO",
        "value.converter.basic.auth.user.info": "SCHEMA_AUTH",
        "value.converter.schema.registry.url": "SCHEMA_REGISTRY",
        "value.converter.schemas.enable": "true",
        "value.converter.value.subject.name.strategy": "io.confluent.kafka.serializers.subject.TopicRecordNameStrategy"
    }
}